PACKAGE = "rosbot_controller"

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()
gen.add("traj_vis_step",    int_t,    0, "", 10,  1, 100)

gen.add("iter_count",    int_t,    0, "", 2,  1, 100)
gen.add("traj_lookahead", double_t, 0, "",    1.5, 1.0, 10)

gen.add("batch_size",    int_t,    0, "",  300, 0 , 1000)
gen.add("time_steps",   int_t,   0, "Must be even",  20, 1, 1000)
gen.add("model_dt",   double_t,   0, "",  0.10, 0, 1)
gen.add("v_std",   double_t,   0, "",  0.1, 0, 5)
gen.add("w_std",   double_t,   0, "",  0.3, 0, 5)
gen.add("limit_v",   double_t,   0, "",  0.5, 0, 5)
gen.add("limit_w",   double_t,   0, "",  1.3, 0, 5)
gen.add("temperature",   double_t,   0, "",  0.25, 0, 100)


gen.add("goal_weight",   double_t,   0, "",  30, 0, 1000)
gen.add("goal_power",   int_t,   0, "",  1, 1, 4)

gen.add("reference_weight",   double_t,   0, "",  1, 0, 1000)
gen.add("reference_power",   int_t,   0, "",  1, 1, 4)

gen.add("obstacle_weight",   double_t,   0, "",  100, 0, 1000)
gen.add("obstacle_power",   int_t,   0, "",  1, 1, 1000)

gen.add("stop_robot",   bool_t,   0, "",  False)
gen.add("wait_full_step",   bool_t,   0, "",  True)
gen.add("visualize",   bool_t,   0, "",  True)

exit(gen.generate(PACKAGE, "MPPI", "MPPI"))
